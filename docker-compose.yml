version: '3.7'

services:
  zookeeper:
    image: "confluentinc/cp-zookeeper:7.0.5.arm64"
    hostname: zookeeper
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker1:
    image: "confluentinc/cp-server:7.0.5.arm64"
    hostname: broker1
    container_name: broker1
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29091,PLAINTEXT_HOST://localhost:9091
    volumes:
      - kafka-data1:/var/run/docker.sock

  broker2:
    image: "confluentinc/cp-server:7.0.5.arm64"
    hostname: broker2
    container_name: broker2
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:29092,PLAINTEXT_HOST://localhost:9092
    volumes:
      - kafka-data2:/var/run/docker.sock

  broker3:
    image: "confluentinc/cp-server:7.0.5.arm64"
    hostname: broker3
    container_name: broker3
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:29093,PLAINTEXT_HOST://localhost:9093
    volumes:
      - kafka-data3:/var/run/docker.sock

  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    restart: unless-stopped
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "broker1:29091;broker2:29092;broker3:29093"
    ports:
      - "8080:8080"
    links:
      - broker1
      - broker2
      - broker3

  kafka-tools:
    image: "confluentinc/cp-kafka:7.0.5.arm64"
    restart: unless-stopped
    hostname: kafka-tools
    container_name: kafka-tools
    command: [ "tail", "-f", "/dev/null" ]
    network_mode: "host"

volumes:
  kafka-data1:
  kafka-data2:
  kafka-data3:
